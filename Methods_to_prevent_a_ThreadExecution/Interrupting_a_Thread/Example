class MyThread extends Thread{
	
	
	@Override
	public void run() {
		
			try {
				for(int i = 0; i<5; i++) {
					System.out.println("Thread execution");
				     Thread.sleep(2000);
				}
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				System.out.println("got interrupted");
			}
		
		
		
			
	
	}
}

public class Interrupt_preventExecution{
	
	

	public static void main(String[] args) throws InterruptedException {
		// TODO Auto-generated method stub
		MyThread t1 = new MyThread();
		t1.start();
		t1.interrupt();
		System.out.println("End of main thread");
	

	}

}


o/p:-
End of main thread
Thread execution
java.lang.InterruptedException: sleep interrupted
	at java.base/java.lang.Thread.sleep(Native Method)
	at MyThread.run(Interrupt_preventExecution.java:11)
got interrupted


so what happen here:-

In the above program interrupt() method call invoked by main Thread will wait
until child Thread entered into sleeping state.
Once child Thread entered into sleeping state then it will be interrupted
immediately.
