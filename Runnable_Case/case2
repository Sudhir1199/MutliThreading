Case study:- 
              MyRunnable r=new MyRunnable();
              Thread t1=new Thread();
              Thread t2=new Thread(r);
              
              t1.run();
              
 // No new Thread will be created but Thread class run() method will be executed just like 
 // normal method call
 //as thread class contains empty implementation and new "new Thread()" dont
 //have target element or argument to invoke overrridden run() method inside class
 //MyRunnable so after the execution of empty implemented Thread class run() method it 
 //will continue its execution further in main method
 
 
 
 
class MyRunnable implements Runnable {
	public void run() {
		for(int i = 0; i<5; i++) {
			System.out.println("Run method");
			try {
				Thread.sleep(2000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}	
	}
	
}
public class Case1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		MyRunnable r = new MyRunnable();
		Thread t = new Thread();
		t.run();
		
		for(int i = 0; i<5; i++) {
			System.out.println("Main method");
			try {
				Thread.sleep(2000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		
	}

}


//o/p:-

Main method
Main method
Main method----> reason for getting same output expalined above
Main method
Main method

              
              
